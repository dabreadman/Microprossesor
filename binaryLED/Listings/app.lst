


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    5 00000000         ; (c) Mike Brady, 2011 -- 2019.
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   10 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   11 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   12 00000000         
   13 00000000         ; TODO
   14 00000000         ;  get decimal representation from hex
   15 00000000         ;   get binary representation using TABLE
   16 00000000         ;  calls flash subroutine
   17 00000000         
   18 00000000 E59F016C        ldr              r0, =0x419
   19 00000004 E1A01000        mov              r1, r0      ; creates a copy
   20 00000008 E3A04101        ldr              r4, =0x40000000 ; address
   21 0000000C E284600A        add              r6,r4,#10   ; sign address
   22 00000010 E3A05000        ldr              r5, =0
   23 00000014 E5C65000        strb             r5,[r6]     ; clears memory
   24 00000018         
   25 00000018 E1B01081 
                       sign    movs             r1,r1, lsl #1
   26 0000001C E3A02000        ldr              r2,=0
   27 00000020 E2A22000        adc              r2,r2,#0
   28 00000024 E3520001        cmp              r2,#1
   29 00000028 1A000004        bne              startdiv
   30 0000002C E3A02001        ldr              r2, =1      ; stores neg bit
   31 00000030 E5C62000        strb             r2,[r6]
   32 00000034 E3E02000        ldr              r2,=0xffffffff
   33 00000038 E0200002        eor              r0,r0,r2    ; flip all bits 
   34 0000003C E2800001        add              r0,r0,#1    ; +1
   35 00000040         
   36 00000040         
   37 00000040 E59F2130 
                       startdiv
                               ldr              r2,=DIVTABLE
   38 00000044 E3A08000        ldr              r8,=0
   39 00000048 E1520006 
                       div     cmp              r2,r6       ; if still in bound
                                                            s
   40 0000004C AA00000A        bge              leds
   41 00000050 E4925004        ldr              r5,[R2],#4  ; largers number of
                                                             power's of 10
   42 00000054 E3500000        cmp              r0,#0       ; if still have rem
                                                            aining
   43 00000058 0A000007        beq              leds
   44 0000005C         
   45 0000005C E1500005 
                       div2    cmp              r0,r5       ; if number larger 
                                                            than divisor
   46 00000060 BA000002        blt              small



ARM Macro Assembler    Page 2 


   47 00000064 E0400005        sub              r0,r0,r5    ; numb = numb - div
                                                            isor
   48 00000068 E2888001        add              r8,r8,#1    ; increment count
   49 0000006C EAFFFFFA        b                div2
   50 00000070         
   51 00000070 E4C48001 
                       small   strb             r8,[r4],#1
   52 00000074 E3A08000        ldr              r8,=0       ; reset count
   53 00000078 EAFFFFF2        b                div
   54 0000007C         
   55 0000007C E3A04101 
                       leds    ldr              r4, =0x40000000 ; address
   56 00000080 E1540006 
                       fstart  cmp              r4,r6       ; if the relative v
                                                            alue of the count i
                                                            s larger than 0
   57 00000084 CA000003        bgt              nothing
   58 00000088 E4D45001        ldrb             r5,[r4],#1  ; find the count an
                                                            d increment
   59 0000008C E3550000        cmp              r5,#0       ; if nothing
   60 00000090 CA000003        bgt              startled
   61 00000094 EAFFFFF9        b                fstart
   62 00000098         
   63 00000098 E3A00000 
                       nothing ldr              r0, =0      ;nothing
   64 0000009C EB00000C        bl               flash
   65 000000A0 EA00000A        b                stop
   66 000000A4         
   67 000000A4 E2444001 
                       startled
                               sub              r4,r4,#1    ; return to correct
                                                             address
   68 000000A8 E5D65000        ldrb             r5,[r6]     ; loads the sign
   69 000000AC E3550001        cmp              r5,#1       ; if negative
   70 000000B0 1A000001        bne              flashnum
   71 000000B4 E3A0000B        ldr              r0, =0xB    ; flash negative si
                                                            gn
   72 000000B8 EB000005        BL               flash
   73 000000BC         
   74 000000BC E1540006 
                       flashnum
                               cmp              r4,r6
   75 000000C0 AA000002        bge              stop
   76 000000C4 E4D40001        ldrb             r0,[r4],#1  ; get count and inc
                                                            rement address
   77 000000C8 EB000001        bl               flash
   78 000000CC EAFFFFFA        b                flashnum
   79 000000D0         
   80 000000D0 EAFFFFFE 
                       stop    B                stop
   81 000000D4         
   82 000000D4         ;
   83 000000D4         ; flash subroutine
   84 000000D4         ; Show the binary representation with LED flashing 
   85 000000D4         ; parameter: 
   86 000000D4         ;  R0: binary representation
   87 000000D4         ; output:
   88 000000D4         ;  none
   89 000000D4         



ARM Macro Assembler    Page 3 


   90 000000D4 E92D4078 
                       flash   PUSH             {r3-r6,lr}
   91 000000D8 E59F109C        ldr              r1,=IO1DIR
   92 000000DC E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   93 000000E0 E5812000        str              r2,[r1]     ;make them outputs
   94 000000E4 E59F1094        ldr              r1,=IO1SET
   95 000000E8 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   96 000000EC E59F2090        ldr              r2,=IO1CLR
   97 000000F0         ; r1 points to the SET register
   98 000000F0         ; r2 points to the CLEAR register
   99 000000F0         
  100 000000F0         
  101 000000F0 E3A05702        ldr              r5,=0x000080000 ; end when the 
                                                            mask reaches this v
                                                            alue
  102 000000F4         
  103 000000F4 E3500000        cmp              r0,#0
  104 000000F8 1A000000        bne              fs
  105 000000FC E3A0000F        ldr              r0,=0xf
  106 00000100 E3A03702 
                       fs      ldr              r3,=0x000080000 
                                                            ; start with P1.16.
                                                            
  107 00000104 E3A06000 
                       floop   ldr              r6,=0
  108 00000108 E3500000        cmp              r0,#0
  109 0000010C 0A000006        beq              ds
  110 00000110 E1B000A0        movs             r0,r0,lsr #1
  111 00000114 E2A66000        adc              r6,r6,#0
  112 00000118 E3560000        cmp              r6,#0
  113 0000011C 0A000000        beq              nset
  114 00000120 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
  115 00000124 E1A030A3 
                       nset    mov              r3,r3,lsr #1
  116 00000128 EAFFFFF5        b                floop
  117 0000012C         
  118 0000012C         ;delay for about a half second
  119 0000012C E59F4054 
                       ds      ldr              r4,=8000000
  120 00000130 E2544001 
                       dloop   subs             r4,r4,#1
  121 00000134 1AFFFFFD        bne              dloop
  122 00000138         
  123 00000138 E1A03083 
                       offs    mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit. P1.16 -> P1.17
                                                             etc.
  124 0000013C E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
  125 00000140 E1530005        cmp              r3,r5
  126 00000144 BAFFFFFB        blt              offs
  127 00000148 E8BD8078        POP              {r3-r6,pc}
  128 0000014C         
  129 0000014C         
  130 0000014C         
  131 0000014C 3B9ACA00 



ARM Macro Assembler    Page 4 


              05F5E100 
              00989680 
              000F4240 
              000186A0 
              00002710 
              000003E8 
              00000064 
              0000000A 
              00000001 DIVTABLE
                               DCD              1000000000, 100000000, 10000000
, 1000000, 100000, 10000, 1000, 100, 10, 1
  132 00000174         
  133 00000174                 END
              00000419 
              00000000 
              E0028018 
              E0028014 
              E002801C 
              007A1200 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
DIVTABLE 0000014C

Symbol: DIVTABLE
   Definitions
      At line 131 in file App.s
   Uses
      At line 37 in file App.s
Comment: DIVTABLE used once
div 00000048

Symbol: div
   Definitions
      At line 39 in file App.s
   Uses
      At line 53 in file App.s
Comment: div used once
div2 0000005C

Symbol: div2
   Definitions
      At line 45 in file App.s
   Uses
      At line 49 in file App.s
Comment: div2 used once
dloop 00000130

Symbol: dloop
   Definitions
      At line 120 in file App.s
   Uses
      At line 121 in file App.s
Comment: dloop used once
ds 0000012C

Symbol: ds
   Definitions
      At line 119 in file App.s
   Uses
      At line 109 in file App.s
Comment: ds used once
flash 000000D4

Symbol: flash
   Definitions
      At line 90 in file App.s
   Uses
      At line 64 in file App.s
      At line 72 in file App.s
      At line 77 in file App.s

flashnum 000000BC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: flashnum
   Definitions
      At line 74 in file App.s
   Uses
      At line 70 in file App.s
      At line 78 in file App.s

floop 00000104

Symbol: floop
   Definitions
      At line 107 in file App.s
   Uses
      At line 116 in file App.s
Comment: floop used once
fs 00000100

Symbol: fs
   Definitions
      At line 106 in file App.s
   Uses
      At line 104 in file App.s
Comment: fs used once
fstart 00000080

Symbol: fstart
   Definitions
      At line 56 in file App.s
   Uses
      At line 61 in file App.s
Comment: fstart used once
leds 0000007C

Symbol: leds
   Definitions
      At line 55 in file App.s
   Uses
      At line 40 in file App.s
      At line 43 in file App.s

nothing 00000098

Symbol: nothing
   Definitions
      At line 63 in file App.s
   Uses
      At line 57 in file App.s
Comment: nothing used once
nset 00000124

Symbol: nset
   Definitions
      At line 115 in file App.s
   Uses
      At line 113 in file App.s
Comment: nset used once
offs 00000138




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: offs
   Definitions
      At line 123 in file App.s
   Uses
      At line 126 in file App.s
Comment: offs used once
sign 00000018

Symbol: sign
   Definitions
      At line 25 in file App.s
   Uses
      None
Comment: sign unused
small 00000070

Symbol: small
   Definitions
      At line 51 in file App.s
   Uses
      At line 46 in file App.s
Comment: small used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
startdiv 00000040

Symbol: startdiv
   Definitions
      At line 37 in file App.s
   Uses
      At line 29 in file App.s
Comment: startdiv used once
startled 000000A4

Symbol: startled
   Definitions
      At line 67 in file App.s
   Uses
      At line 60 in file App.s
Comment: startled used once
stop 000000D0

Symbol: stop
   Definitions
      At line 80 in file App.s
   Uses
      At line 65 in file App.s
      At line 75 in file App.s
      At line 80 in file App.s

21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 11 in file App.s
   Uses
      At line 96 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 9 in file App.s
   Uses
      At line 91 in file App.s
Comment: IO1DIR used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 10 in file App.s
   Uses
      At line 94 in file App.s
Comment: IO1SET used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
360 symbols in table
