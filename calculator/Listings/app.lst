


ARM Macro Assembler    Page 1 


    1 00000000         ;AREA reset, CODE, READONLY
    2 00000000                 AREA             AsmTemplate, CODE, READONLY
    3 00000000         
    4 00000000                 IMPORT           main
    5 00000000         
    6 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    7 00000000         ; (c) Mike Brady, 2011 -- 2019.
    8 00000000         
    9 00000000                 EXPORT           start
   10 00000000         start
   11 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   12 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   13 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   14 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   15 00000000         
   16 00000000         ; TODO
   17 00000000         ;  get decimal representation from hex
   18 00000000         ;   get binary representation using TABLE
   19 00000000         ;  calls flash subroutine
   20 00000000         
   21 00000000 E3A00002        ldr              r0,=2
   22 00000004 EB000027        bl               flash
   23 00000008         
   24 00000008         ini
   25 00000008 E3A04000        ldr              r4,=0       ; sum
   26 0000000C         inic
   27 0000000C E3A05000        ldr              r5,=0       ; cur 
   28 00000010 E3A06001        ldr              r6,=1       ; operator
   29 00000014         loop
   30 00000014 EB00003A        bl               button      ; get input
   31 00000018         
   32 00000018         
   33 00000018 E3700014 
                       bn20    cmp              r0,#-20     ; if long P20 clear
                                                            all
   34 0000001C 1A000000        bne              bn21
   35 00000020 EAFFFFF8        b                ini
   36 00000024 E3700015 
                       bn21    cmp              r0,#-21     ; if long P21 clear
                                                             last
   37 00000028 1A000000        bne              b22
   38 0000002C EAFFFFF6        b                inic
   39 00000030         
   40 00000030 E3500016 
                       b22     cmp              r0,#22      ; if P22 n-
   41 00000034 1A000001        bne              b23
   42 00000038 E2455001        sub              r5,r5,#1    ; n-
   43 0000003C EA000015        b                numEnd
   44 00000040         
   45 00000040 E3500017 
                       b23     cmp              r0,#23      ; if P23 n+
   46 00000044 1A00000B        bne              b20
   47 00000048 E2855001        add              r5,r5,#1    ; n+
   48 0000004C EA000011        b                numEnd



ARM Macro Assembler    Page 2 


   49 00000050         
   50 00000050         substract
   51 00000050 E3560002        cmp              r6,#2       ; if P20 -
   52 00000054 1A000002        bne              plus
   53 00000058 E0444005        sub              r4,r4,r5    ; sum-=cur
   54 0000005C E1A00004        mov              r0,r4       ; mov for display
   55 00000060 E3A05000        ldr              r5,=0       ; clear cur
   56 00000064         
   57 00000064         plus
   58 00000064 E3560001        cmp              r6,#1       ; if P21 +
   59 00000068 1AFFFFE6        bne              ini
   60 0000006C E0844005        add              r4,r4,r5    ; sum+=cur
   61 00000070 E1A00004        mov              r0,r4       ; mov for display
   62 00000074 E3A05000        ldr              r5,=0       ; clear cur
   63 00000078         
   64 00000078         b20
   65 00000078 E3500014        cmp              r0,#20      ; if P20 -
   66 0000007C 1A000000        bne              b21
   67 00000080 E3A06002        ldr              r6,=2       ; set op = -
   68 00000084         b21
   69 00000084 E3500015        cmp              r0,#21      ; if P21 +
   70 00000088 1AFFFFDE        bne              ini
   71 0000008C E3A06001        ldr              r6,=1       ; set op = +
   72 00000090         
   73 00000090 E1A00004        mov              r0,r4       ; mov for display
   74 00000094 EA000000        b                endloop
   75 00000098         
   76 00000098         numEnd
   77 00000098 E1A00005        mov              r0,r5       ; get cur into r0 f
                                                            or display
   78 0000009C         endloop
   79 0000009C EB000001        bl               flash
   80 000000A0 EAFFFFDB        b                loop
   81 000000A4 EAFFFFFE 
                       stop    B                stop
   82 000000A8         
   83 000000A8         
   84 000000A8         ;
   85 000000A8         ; flash subroutine
   86 000000A8         ; Show the binary representation with LED flashing 
   87 000000A8         ; parameter: 
   88 000000A8         ;  R0: binary representation
   89 000000A8         ; output:
   90 000000A8         ;  none
   91 000000A8         
   92 000000A8 E92D4078 
                       flash   PUSH             {r3-r6,lr}
   93 000000AC E59F10EC        ldr              r1,=IO1DIR
   94 000000B0 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   95 000000B4 E5812000        str              r2,[r1]     ;make them outputs
   96 000000B8 E59F10E4        ldr              r1,=IO1SET
   97 000000BC E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   98 000000C0 E59F20E0        ldr              r2,=IO1CLR
   99 000000C4         ; r1 points to the SET register
  100 000000C4         ; r2 points to the CLEAR register
  101 000000C4         
  102 000000C4         



ARM Macro Assembler    Page 3 


  103 000000C4 E3A05702        ldr              r5,=0x000080000 ; end when the 
                                                            mask reaches this v
                                                            alue
  104 000000C8         
  105 000000C8 E3500000        cmp              r0,#0
  106 000000CC 1A000000        bne              fs
  107 000000D0 E3A0000F        ldr              r0,=0xf
  108 000000D4 E3A03702 
                       fs      ldr              r3,=0x000080000 
                                                            ; start with P1.16.
                                                            
  109 000000D8 E3A06000 
                       floop   ldr              r6,=0
  110 000000DC E3500000        cmp              r0,#0
  111 000000E0 0A000006        beq              ds
  112 000000E4 E1B000A0        movs             r0,r0,lsr #1
  113 000000E8 E2A66000        adc              r6,r6,#0
  114 000000EC E3560000        cmp              r6,#0
  115 000000F0 0A000000        beq              nset
  116 000000F4 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
  117 000000F8 E1A030A3 
                       nset    mov              r3,r3,lsr #1
  118 000000FC EAFFFFF5        b                floop
  119 00000100         
  120 00000100         ds
  121 00000100 E8BD8078        POP              {r3-r6,pc}
  122 00000104         
  123 00000104         
  124 00000104         ; wait subrotuine
  125 00000104         ; wait for a certain time
  126 00000104         ; parameter:
  127 00000104         ; R0: time to wait
  128 00000104         ; output: none
  129 00000104         
  130 00000104         ;wait  ldr r0,=4000000
  131 00000104         ;waitl subs r0,r0,#1
  132 00000104         ;bne  waitl
  133 00000104         ;bx lr
  134 00000104         
  135 00000104         ;
  136 00000104         ;
  137 00000104         ;
  138 00000104         ;
  139 00000104         ;
  140 00000104         
  141 00000104         
  142 00000104         button
  143 00000104 E92D4030        PUSH{r4-r5,LR}
  144 00000108         buttonIni
  145 00000108 E59F209C        ldr              r2,=IO1PIN  ; get mem address
  146 0000010C E3A03000        ldr              r3,=0       ; nothing
  147 00000110         buttonRead
  148 00000110 E5920000        ldr              r0,[r2]     ; get memory
  149 00000114         buttonGetBits
  150 00000114 E1E00000        mvn              r0,r0
  151 00000118 E1A00A20        lsr              r0,#20      ; right shift 20
  152 0000011C E3A0100F        ldr              r1,=0xF     ; mask
  153 00000120 E0000001        and              r0,r1       ; get bits



ARM Macro Assembler    Page 4 


  154 00000124 E3500000        cmp              r0,#0       ; if has input
  155 00000128 0A000009        beq              butNoIn
  156 0000012C E3540000        cmp              r4,#0       ; if already presse
                                                            d
  157 00000130 0A000001        beq              butNew
  158 00000134 E1530001        cmp              r3,r1       ; if input same
  159 00000138 1A000007        bne              finDiff
  160 0000013C         butNew
  161 0000013C E1A03000        mov              r3,r0       ; store copy
  162 00000140 E2844001        add              r4,r4,#1    ; add counter
  163 00000144         
  164 00000144 E59F5064 
                       wait    ldr              r5,=4000000
  165 00000148 E2555001 
                       waitl   subs             r5,r5,#1
  166 0000014C 1AFFFFFD        bne              waitl
  167 00000150 EAFFFFEE        b                buttonRead
  168 00000154         
  169 00000154         butNoIn
  170 00000154 E3540000        cmp              r4,#0       ; if already have i
                                                            nput
  171 00000158 0AFFFFEA        beq              buttonIni
  172 0000015C         
  173 0000015C         finDiff
  174 0000015C E1A00003        mov              r0,r3
  175 00000160         fin
  176 00000160 E3500001        cmp              r0,#0x1     ; if P.20
  177 00000164 1A000000        bne              P21
  178 00000168 E3A00014        ldr              r0,=20
  179 0000016C E3500002 
                       P21     cmp              r0,#0x2     ; if P.21
  180 00000170 1A000000        bne              P22
  181 00000174 E3A00015        ldr              r0,=21
  182 00000178         ;b buttonIn
  183 00000178 E3500004 
                       P22     cmp              r0,#0x4     ; if P.22
  184 0000017C 1A000000        bne              P23
  185 00000180 E3A00016        ldr              r0,=22
  186 00000184 E3500008 
                       P23     cmp              r0,#0x8     ; if P.23
  187 00000188 1A000000        bne              checklong
  188 0000018C E3A00017        ldr              r0,=23
  189 00000190         checklong
  190 00000190 E3540008        cmp              r4,#8
  191 00000194 BA000000        blt              endBut
  192 00000198 E2600000        neg              r0,r0
  193 0000019C         endBut
  194 0000019C E8BD8030        POP              {r4-r5,PC}
  195 000001A0                 END
              E0028018 
              E0028014 
              E002801C 
              E0028010 
              003D0900 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: AsmTemplate unused
P21 0000016C

Symbol: P21
   Definitions
      At line 179 in file App.s
   Uses
      At line 177 in file App.s
Comment: P21 used once
P22 00000178

Symbol: P22
   Definitions
      At line 183 in file App.s
   Uses
      At line 180 in file App.s
Comment: P22 used once
P23 00000184

Symbol: P23
   Definitions
      At line 186 in file App.s
   Uses
      At line 184 in file App.s
Comment: P23 used once
b20 00000078

Symbol: b20
   Definitions
      At line 64 in file App.s
   Uses
      At line 46 in file App.s
Comment: b20 used once
b21 00000084

Symbol: b21
   Definitions
      At line 68 in file App.s
   Uses
      At line 66 in file App.s
Comment: b21 used once
b22 00000030

Symbol: b22
   Definitions
      At line 40 in file App.s
   Uses
      At line 37 in file App.s
Comment: b22 used once
b23 00000040

Symbol: b23



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 45 in file App.s
   Uses
      At line 41 in file App.s
Comment: b23 used once
bn20 00000018

Symbol: bn20
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: bn20 unused
bn21 00000024

Symbol: bn21
   Definitions
      At line 36 in file App.s
   Uses
      At line 34 in file App.s
Comment: bn21 used once
butNew 0000013C

Symbol: butNew
   Definitions
      At line 160 in file App.s
   Uses
      At line 157 in file App.s
Comment: butNew used once
butNoIn 00000154

Symbol: butNoIn
   Definitions
      At line 169 in file App.s
   Uses
      At line 155 in file App.s
Comment: butNoIn used once
button 00000104

Symbol: button
   Definitions
      At line 142 in file App.s
   Uses
      At line 30 in file App.s
Comment: button used once
buttonGetBits 00000114

Symbol: buttonGetBits
   Definitions
      At line 149 in file App.s
   Uses
      None
Comment: buttonGetBits unused
buttonIni 00000108

Symbol: buttonIni
   Definitions
      At line 144 in file App.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 171 in file App.s
Comment: buttonIni used once
buttonRead 00000110

Symbol: buttonRead
   Definitions
      At line 147 in file App.s
   Uses
      At line 167 in file App.s
Comment: buttonRead used once
checklong 00000190

Symbol: checklong
   Definitions
      At line 189 in file App.s
   Uses
      At line 187 in file App.s
Comment: checklong used once
ds 00000100

Symbol: ds
   Definitions
      At line 120 in file App.s
   Uses
      At line 111 in file App.s
Comment: ds used once
endBut 0000019C

Symbol: endBut
   Definitions
      At line 193 in file App.s
   Uses
      At line 191 in file App.s
Comment: endBut used once
endloop 0000009C

Symbol: endloop
   Definitions
      At line 78 in file App.s
   Uses
      At line 74 in file App.s
Comment: endloop used once
fin 00000160

Symbol: fin
   Definitions
      At line 175 in file App.s
   Uses
      None
Comment: fin unused
finDiff 0000015C

Symbol: finDiff
   Definitions
      At line 173 in file App.s
   Uses
      At line 159 in file App.s
Comment: finDiff used once
flash 000000A8



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: flash
   Definitions
      At line 92 in file App.s
   Uses
      At line 22 in file App.s
      At line 79 in file App.s

floop 000000D8

Symbol: floop
   Definitions
      At line 109 in file App.s
   Uses
      At line 118 in file App.s
Comment: floop used once
fs 000000D4

Symbol: fs
   Definitions
      At line 108 in file App.s
   Uses
      At line 106 in file App.s
Comment: fs used once
ini 00000008

Symbol: ini
   Definitions
      At line 24 in file App.s
   Uses
      At line 35 in file App.s
      At line 59 in file App.s
      At line 70 in file App.s

inic 0000000C

Symbol: inic
   Definitions
      At line 26 in file App.s
   Uses
      At line 38 in file App.s
Comment: inic used once
loop 00000014

Symbol: loop
   Definitions
      At line 29 in file App.s
   Uses
      At line 80 in file App.s
Comment: loop used once
nset 000000F8

Symbol: nset
   Definitions
      At line 117 in file App.s
   Uses
      At line 115 in file App.s
Comment: nset used once
numEnd 00000098



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: numEnd
   Definitions
      At line 76 in file App.s
   Uses
      At line 43 in file App.s
      At line 48 in file App.s

plus 00000064

Symbol: plus
   Definitions
      At line 57 in file App.s
   Uses
      At line 52 in file App.s
Comment: plus used once
start 00000000

Symbol: start
   Definitions
      At line 10 in file App.s
   Uses
      At line 9 in file App.s
Comment: start used once
stop 000000A4

Symbol: stop
   Definitions
      At line 81 in file App.s
   Uses
      At line 81 in file App.s
Comment: stop used once
substract 00000050

Symbol: substract
   Definitions
      At line 50 in file App.s
   Uses
      None
Comment: substract unused
wait 00000144

Symbol: wait
   Definitions
      At line 164 in file App.s
   Uses
      None
Comment: wait unused
waitl 00000148

Symbol: waitl
   Definitions
      At line 165 in file App.s
   Uses
      At line 166 in file App.s
Comment: waitl used once
36 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 13 in file App.s
   Uses
      At line 98 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 11 in file App.s
   Uses
      At line 93 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 14 in file App.s
   Uses
      At line 145 in file App.s
Comment: IO1PIN used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 12 in file App.s
   Uses
      At line 96 in file App.s
Comment: IO1SET used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 4 in file App.s
   Uses
      None
Comment: main unused
1 symbol
376 symbols in table
